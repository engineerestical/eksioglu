# Generated by Django 5.0.3 on 2024-03-21 19:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('staffmanagement', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('national_identity_number', models.CharField(max_length=11, verbose_name='TC Kimlik No')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Telefon Numarası')),
                ('hire_date', models.DateField(verbose_name='İşe Alım Tarihi')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Zamanı')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Son Güncelleme Zamanı')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='ExpertStaffUser',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staffmanagement.region', verbose_name='Bölge')),
            ],
            options={
                'verbose_name': 'Usta/Servis',
                'verbose_name_plural': 'Usta/Servisler',
            },
            bases=('usermanagement.customuser',),
        ),
        migrations.CreateModel(
            name='FieldStaffUser',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('expert_staffs', models.ManyToManyField(to='usermanagement.expertstaffuser', verbose_name='Usta/Servisler')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staffmanagement.region', verbose_name='Bölge')),
            ],
            options={
                'verbose_name': 'Saha Personeli',
                'verbose_name_plural': 'Saha Personelleri',
            },
            bases=('usermanagement.customuser',),
        ),
        migrations.CreateModel(
            name='OfficeStaffUser',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staffmanagement.department', verbose_name='Departman')),
            ],
            options={
                'verbose_name': 'Ofis Personeli',
                'verbose_name_plural': 'Ofis Personelleri',
            },
            bases=('usermanagement.customuser',),
        ),
    ]
